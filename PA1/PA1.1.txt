PA1.1 面试
【题目】
描述
某公司在对应聘者做过一轮笔试之后，从中选出成绩最高的n 人继续进行面试。在笔试中，每位应聘者已被分配了一个整数ID，面试时将沿用这个ID。
为公平起见，组织者决定利用会议室外的圆桌，按以下方法“随机”确定面试顺序：第一个到达的应聘者在圆桌周围任意选择一个位置坐下；此后到达的每位应聘者都从前一应聘者出发，沿逆时针方向围圆桌走过m 人（前一应聘者算作走过的第1 人，同一人可能经过多次），并紧邻第m 人右侧就座；所有应聘者到齐后，从最后到达者出发，绕圆桌以顺时针方向为序进行面试。
这里假定应聘者到达的时刻互异，且相对的就坐位置确定后，左、右两人之间总能插入一把椅子。
试编写一个程序，对于任给的m 及n 个应聘者ID，确定对应的面试顺序。
输入
共2行。
第1行包含两个整数，以空格分隔，依次表示n和m。
第2行包含n个整数，以空格分隔，表示先后到达的n个应聘者的ID。
输出
共1行。以空格分隔的n个整数，分别表示顺次进行面试的应聘者的ID。

输入样例
3 2
8 9 10

输出样例
10 8 9

限制
1 <= N <= 10^3
1 <= m <= 2*N
输入的ID保证在int类型的范围内。

提示
请借助列表实现




【核心思路】
考虑到环状桌子和逆时针面试，这里采用双向循环列表来构造，每个人是一个点，有一个前指针，一个后指针。
class Person{
private:
	 static int size; //桌上人数 		       
                  Person* pre; //前指针
	 Person* next;//后指针
	 int id; //ID
public:  ......
}
【class实现】
1. 第一个人单独拿出来，初始化，前指针=后指针=this
2. insert方法：在当前元素后的m个位置的后面插入（当前元素是第1个）,返回插入元素的指针
具体实现：先遍历后面m个位置，找到即将插入位置，为新对象申请内存，调整相关的四个指针变量即可。
3. reverse_traverse方法：从当前对象开始，逆序遍历（原题中所说的按照顺时针依次面试），输出id
【main（）实现】
1.初始化第一个人
2.再依次用循环insert其他所有人，insert方法最后会返回指针，于是记录最后一个上桌的人
3. 把该指针传入reverse_traverse方法，逆序遍历输出id